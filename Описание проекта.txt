Название проекта: Интернет-магазин.

Описание интерфейса
Хедер
У неавторизованного пользователя доступны кнопки: Бренды, О нас, Поиск, Корзина, Регистрация, Вход.
У авторизованного пользователя доступны кнопки: Бренды, О нас, Поиск, Корзина, Профиль, Выход.

Бренды
Выпадающий список из всех брендов часов в алфавитом порядке.

О нас
Основная часть страницы - карта с точками локаций магазина.
Ниже - контактная информация, содержит:
- время работы (текст)
- адрес (текст)
- номер (иконка + текст)
- почта (иконка + текст)
- ссылка на гит (иконка + ссылка)
- ссылка на тг (иконка + ссылка)


Функции и возможности:
Два вида пользователей.
Авторизованные пользователи:
- Настройка и изменение данных в аккаунте.
- Оформление заказов.
- Выход из лк.

Неавторизованные пользователи:
- Регистрация лк.
- Авторизация
- Нет возможности оформить заказ.


Подробное описание действий
Регистрация
- По нажатию на кнопку Зарегистрироваться происходит переход на страницу регистрации с полями указанными в таблице User.
- После заполнения пользователь нажимает кнопку Создать профиль и происходит post запрос (UsersController), который добавляет нового пользователя в таблицу User и возвращает id, который передаётся на фронт.
- Перед добавлением в базу выполняется проверка на уникальность email, если такой email в базе уже есть, то выбрасываем exception.

Авторизация
- Пользователь заполняет два инпута email и password, после чего происходит get запрос (UsersController) на получение данных об аккаунте по email и password и возвращает id на фронт.
- Полученный id записывается в переменную и хранится в localStorage.
- Если email не найден в базе, выдает уведомление, что такого пользователя нет.
- Если password введён неправильный, выдаёт уведомление, что password неправильный.

Настройка и изменение данных в аккаунте (отображается только авторизованным пользователям)
- Запрашиваем id из localStorage.
- Для настройки изменения данных в аккаунте выполняется get запрос (UsersController) для получения данных о пользователе (по id)
- Затем пользователь их редактирует через интерфейс и сохраняет (по кнопке)
- Далее отправляется put запрос (UsersController)
- Перед добавлением в базу выполняется проверка на уникальность email, если такой email в базе уже есть, то выбрасываем exception.
- Если неавторизованный пользователь перейдёт по прямой ссылке на страницу Профиля, то будет вызвана переадресация на страницу Авторизации.

Поиск
- При выполнении действия по кнопке Поиск, ищётся товар по имени введённого бренда.

Корзина
- При выполнении действия по кнопке Корзина, пользователь переходит в раздел Коризна.

Отображение всех товаров
- При посещении вкладки Товары вызывается get запрос (ProductsController) на получение списка всех товаров из бд (все поля из таблицы products объединённой с таблицей brands по brandId)
и отображаем результат запроса в интерфейсе.

Отображение карточки товара
- При переходе на страницу конкретного товара, вызывается get запрос (ProductsController) на получение информации о товаре по его id.
- Раздел доступен авторизованным и неавторизованным пользователям с одинаковым функционалом.
- При выполнении действия по кнопке Добавить в корзину вызывается post запрос (Cart) на обновление списка товаров в корзине,
товар добавляется в корзину и открывается диалогвое окно Товар добавлен в корзину.
- Диалоговое окно содержит: ?количество добленного товара, ?итоговую сумму, кнопки Продолжить покупки, Посмотреть корзину.
- При выполнении действия по кнопке Продолжить покупки закрывается диалоговое окно и пользователь остается на странице товара,
который он добавил в коризину.
- При выполнении действия по кнопке Посмотреть корзину пользователь переходит в корзину.

Корзина
- Раздел содержит: Карточку товара, Итоговую сумму заказа, кнопку Продолжить заказ.
- Карточка товара содержит: 
- При выполнении действия по кнопке Продолжить заказ пользователь переходит в раздел Оформление заказа
- Кнопка Оформить заказ не отображается если коризина пустая или недоступна если пользователь не авторизован (переадресация на страницу Авторизация).
- Если в корзине нет товаров, отображется надпись Корзина пуста.

Оформление заказа
- Раздел доступен авторизованым пользователям (переадресация на страницу Авторизация).
- Пользователь заполняет реактивную форму, если форма заполнена корректно, кнопка Оформить заказ становится активной.
- При выполнении действия по кнопке Оформить заказ вызывается: 
    put запрос (OrdersController) на обновление списка заказов в бд.
    put запрос (ProductController) на обновление списка товаров в бд.
    get запрос (GetOrder) на получение информации о заказе, которая отобажается в диалоговом окне Заказ оформлен.
- Диалоговое окно содержит: Номер заказа, кнопку На главную.
- При выполнении действия по кнопке На главную закрывается диалоговое окно и пользователь направляется на главную страницу.


Архитектура:
Бэк:
Имеет общий сервис и содержит 3 класса.
- Класс, отвечающий за авторизованные пользовательские действия (настройка ЛК и избранного) - UsersController
- Класс обработки заказов (оформить + взаимодействие с картой) - OrdersController
- Класс товаров (отображение списка брендов, списка товаров, поиск, отображение карточки товара) - ProductsController

Фронт:
Имеет следующие сервисы:
- 
- Сервис, отвечающий за получение информации о заказе - GetOrder

Бд:
Пользователи
Таблица users содержит информацию о зарегистрированных пользователях. Она должна включать следующие поля:
- id: уникальный идентификатор пользователя.
- email: уникальный адрес электронной почты.
- password_hash: хэш пароля.
- first_name, last_name: имя и фамилия пользователя.
- phone_number: контактный номер телефона.
- birth_date: дата рождения.

Товары
Таблица products содержит информацию о товарах, представленных на платформе:
- id: уникальный идентификатор товара.
- brand_id: ссылка на бренд товара (таблица brands).
- title: название продукта.  
- model: модель продукта.

- ?корпус
- ?стекло
- ?браслет
- ?циферблат

- price: цена товара.
- image_urls: массив URL изображений товара (в формате JSON).

Бренды
Таблица brands содержит список брендов:
- id: уникальный идентификатор бренда.
- name: название бренда.
- country: страна производителя.

Корзина
Таблица cart хранит информацию о добавленных товарах:
- product_id: ссылка на товар (таблица products).
- count_product: количество товаров.
- total_price: итоговая цена товара.
- total_amount: итоговая сумма заказа.

Заказы
Таблица orders хранит информацию об оформленных заказах:
- id: уникальный идентификатор заказа.
- user_id: ссылка на пользователя (таблица users).
- ?number_order: номер заказа.
- total_amount: итоговая сумма заказа.
- shipping_address: адрес доставки.
- payment_method: метод оплаты.
